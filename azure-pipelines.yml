trigger:
- main

jobs:
 - job: UnitTest
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
        npm test
      displayName: 'npm test'

 - job: ANDROID
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
      displayName: 'npm install'

    - bash: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
      displayName: "install Android image"
    - script: |
        $ANDROID_HOME/emulator/emulator -list-avds
        echo '---'
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_android_emulator -k 'system-images;android-27;google_apis;x86' --force
        echo '---'
        echo '---'
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_android_emulator1 -k 'system-images;android-27;google_apis;x86' --force
        echo '---'
        $ANDROID_HOME/emulator/emulator -list-avds
      displayName: "create AVD"
    - script: |
        $ANDROID_HOME/platform-tools/adb devices
        echo '---'
        nohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator -no-snapshot > /dev/null 2>&1 & $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        echo '---'
        echo '---'
        nohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator1 -no-snapshot > /dev/null 2>&1 & $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        echo '---'
        $ANDROID_HOME/platform-tools/adb devices
      displayName: "start Android emulator"
    - script: |
        npm run build --if-present
        npm run integration-android
      displayName: "Android Integration Test"

 - job: E2EPluginTest
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
        export APPIUM_HOME=/tmp/device-farm
        ./node_modules/.bin/appium plugin install --source=local .
        nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./server-config.json &
        npm run test-e2e
      displayName: 'E2E Test'

 - job: E2EPluginBrowseStackTest
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
        export APPIUM_HOME=/tmp/device-farm
        ./node_modules/.bin/appium plugin install --source=local .
        nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./serverConfig/bs-config.json &
        npm run test-e2e-browserstack
      displayName: 'E2E Test'

 - job: E2EPluginPCloudy
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
        export APPIUM_HOME=/tmp/device-farm
        ./node_modules/.bin/appium plugin install --source=local .
        nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./serverConfig/pcloudy-config.json &
        npm run test-e2e-pCloudy
      displayName: 'E2E Test'

 - job: BrowserStack
   pool:
     vmImage: 'macOS-latest'

   steps:
    - task: NodeTool@0.200.0
      inputs:
       versionSpec: '16.x'

    - script: |
        npm ci
        export APPIUM_HOME=/tmp/device-farm
        ./node_modules/.bin/appium plugin install --source=local .
        nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./serverConfig/bs-config.json &
        npm run test-parallel-bs
      displayName: 'E2E Test'

# - job: Sauce
#   pool:
#     vmImage: 'macOS-latest'
#
#   steps:
#     - task: NodeTool@0.200.0
#       inputs:
#         versionSpec: '16.x'
#
#     - script: |
#         npm ci
#         export APPIUM_HOME=/tmp/device-farm
#         ./node_modules/.bin/appium plugin install --source=local .
#         nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./serverConfig/sauce-config.json &
#         npm run test-parallel-sauce
#       displayName: 'E2E Test'

 - job: LambdaTest
   pool:
     vmImage: 'macOS-latest'

   steps:
     - task: NodeTool@0.200.0
       inputs:
         versionSpec: '16.x'

     - script: |
         npm ci
         export APPIUM_HOME=/tmp/device-farm
         ./node_modules/.bin/appium plugin install --source=local .
         nohup ./node_modules/.bin/appium server -ka 800 --use-plugins=device-farm -pa /wd/hub --config=./serverConfig/lt-config.json &
         npm run test-parallel-lt
       displayName: 'E2E Test'
