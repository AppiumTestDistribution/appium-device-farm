datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Build {
  id        String    @id @default(uuid())
  name      String?
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id                   String       @id
  build_id             String?
  build                Build?       @relation(fields: [build_id], references: [id])
  name                 String?
  status               String       @default("running")
  desired_capabilities String
  session_capabilities String
  node_id              String
  has_live_video       Boolean
  video_recording      String?
  startTime            DateTime     @default(now())
  endTime              DateTime?
  failure_reason       String?
  //device properties
  device_udid          String
  device_platform      String
  device_version       String
  device_name          String?
  // Timestamps
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  SessionLog           SessionLog[]
}

model SessionLog {
  id           String   @id @default(uuid())
  session_id   String
  session      Session  @relation(fields: [session_id], references: [id])
  command_name String?
  url          String
  method       String
  title        String
  subtitle     String?
  body         String?
  response     String
  screenshot   String?
  is_success   Boolean?
  // Timestamps
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model TestEventJournal {
  id                  String   @id @default(uuid())
  session_id          String
  event_uuid          String   @unique
  event_type          String
  event_sub_type      String
  name                String
  scopes              String
  result              String?
  started_at          DateTime?
  finished_at         DateTime?
  start_event_doc     String?
  finished_event_doc  String?
  file                String
}